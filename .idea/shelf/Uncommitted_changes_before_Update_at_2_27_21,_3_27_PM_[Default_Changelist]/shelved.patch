Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/SwitchAuto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.autonomous;\n\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\nimport com.qualcomm.robotcore.eventloop.opmode.OpMode;\nimport com.qualcomm.robotcore.hardware.CRServo;\nimport com.qualcomm.robotcore.hardware.DcMotor;\nimport com.qualcomm.robotcore.hardware.NormalizedColorSensor;\nimport com.qualcomm.robotcore.hardware.Servo;\n\nimport org.firstinspires.ftc.teamcode.auxilary.AutoState;\nimport org.firstinspires.ftc.teamcode.auxilary.ColorSensor;\nimport org.firstinspires.ftc.teamcode.auxilary.PaulMath;\nimport org.firstinspires.ftc.teamcode.auxilary.StateMachine;\nimport org.firstinspires.ftc.teamcode.managers.ImuManager;\nimport org.firstinspires.ftc.teamcode.managers.ManipulationManager;\nimport org.firstinspires.ftc.teamcode.managers.MovementManager;\n\n@Autonomous\npublic class SwitchAuto extends OpMode {\n\n    MovementManager driver;\n    ManipulationManager limbs;\n    ColorSensor sensorOne;\n    ColorSensor sensorFour;\n    ImuManager imu;\n    int step;\n    int conditional;\n    double startTime;\n\n    public void init() {\n        resetStartTime();\n        driver = new MovementManager(hardwareMap.get(DcMotor.class, \"fl\"),\n                hardwareMap.get(DcMotor.class, \"fr\"),\n                hardwareMap.get(DcMotor.class, \"bl\"),\n                hardwareMap.get(DcMotor.class, \"br\"));\n        limbs = new ManipulationManager(\n                new CRServo[] {\n                        hardwareMap.get(CRServo.class, \"shooterArm\")\n                },\n                new String[] {\n                        \"shooterArm\"\n                },\n                new Servo[] {},\n                new String[] {},\n                new DcMotor[] {\n                        hardwareMap.get(DcMotor.class, \"drum\"),\n                        hardwareMap.get(DcMotor.class, \"intake\"),\n                        hardwareMap.get(DcMotor.class, \"flywheelRight\"),\n                        hardwareMap.get(DcMotor.class, \"flywheelLeft\")\n                },\n                new String[] {\n                        \"drum\",\n                        \"intake\",\n                        \"flywheelRight\",\n                        \"flywheelLeft\"\n                }\n        );\n        imu = new ImuManager(hardwareMap.get(com.qualcomm.hardware.bosch.BNO055IMU.class, \"imu\"));\n        sensorOne = new ColorSensor(hardwareMap.get(NormalizedColorSensor.class, \"sensorOne\"));\n        sensorFour = new ColorSensor(hardwareMap.get(NormalizedColorSensor.class, \"sensorFour\"));\n\n\n\n        /*\n            ... init limbs and driver, not shown ...\n         */\n        step = 0;\n    }\n\n\n    public void loop() {\n\n\n        switch(step){\n            case 0:\n                //set shooterArm and turn on Flywheels\n                limbs.setServoPower(\"shooterArm\", 0.63);\n                limbs.setMotorPower(\"flywheelRight\", -1);\n                limbs.setMotorPower(\"flywheelLeft\", 1);\n                step++;\n                break;\n            case 1:\n                //go forward\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1000) {\n                    driver.driveRaw( 0.6f, 0.6f, 0.6f, 0.6f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 2:\n                //strafe to rings\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    driver.driveRaw(0.4f,-0.4f,-0.4f, 0.4f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 3:\n                //scan and set conditional\n                sensorOne.runSample();\n                sensorFour.runSample();\n                if(sensorOne.isSpecial1()) {\n                    if(sensorFour.isSpecial1()){\n                        conditional = 4;\n                    } else conditional = 1;\n                } else conditional = 0;\n                step++;\n                break;\n            case 4:\n                //strafe back to center\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    driver.driveRaw(-0.4f,0.4f,0.4f, -0.4f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 5:\n                //drive to line\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1000) {\n                    driver.driveRaw( 0.6f, 0.6f, -0.6f, -0.6f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 6:\n                //shoot ring 1\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    limbs.setServoPower(\"shooterArm\", 0);\n                } else {\n                    step++;\n                    break;\n                }\n            case 7:\n                //retract\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    limbs.setServoPower(\"shooterArm\", 0.63);\n                } else {\n                    step++;\n                    break;\n                }\n            case 8:\n                //shoot ring 2\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    limbs.setServoPower(\"shooterArm\", 0);\n                } else {\n                    step++;\n                    break;\n                }\n            case 9:\n                //retract\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    limbs.setServoPower(\"shooterArm\", 0.63);\n                } else {\n                    step++;\n                    break;\n                }\n            case 10:\n                //shoot ring 3\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    limbs.setServoPower(\"shooterArm\", 0);\n                } else {\n                    step++;\n                    break;\n                }\n            case 11:\n                //retract\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    limbs.setServoPower(\"shooterArm\", 0.63);\n                } else {\n                    step++;\n                    break;\n                }\n            case 12:\n                //Choose one of three paths based on conditional. 20 = 0 rings, 30 = 1 ring, 40 = 4 rings\n                if(conditional == 0) {step = 20; break;}\n                    else if (conditional == 1) {step = 30; break;}\n                    else if (conditional == 4) {step = 40; break;}\n            case 20:\n                //If 0 rings go forward\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    driver.driveRaw( 0.6f, 0.6f, -0.6f, -0.6f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 21:\n                //lower wobble goal\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n//                    limbs.setServoPower(\"wobleArmLeft\", 1);\n//                    limbs.setServoPower(\"wobleArmRight\", -1);\n                } else {\n                    step++;\n                    break;\n                }\n            case 22:\n                //release wobble goal\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n//                    limbs.setServoPower(\"wobleClawLeft\", 1);\n//                    limbs.setServoPower(\"wobleClawRight\", -1);\n                } else {\n                    step++;\n                    break;\n                }\n            case 23:\n                //go back to line and park\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    driver.driveRaw(-0.6f, -0.6f, 0.6f, 0.6f);\n                } else {\n                    driver.stopDrive();\n                    step = 77;\n                    break;\n                }\n            case 30:\n                //If 1 ring drive forward more\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1000) {\n                    driver.driveRaw( 0.6f, 0.6f, -0.6f, -0.6f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 31:\n                //strafe to section 1\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n                    driver.driveRaw(-0.4f,0.4f,0.4f, -0.4f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 32:\n                //lower wobble goal\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n//                    limbs.setServoPower(\"wobleArmLeft\", 1);\n//                    limbs.setServoPower(\"wobleArmRight\", -1);\n                } else {\n                    step++;\n                    break;\n                }\n            case 33:\n                //release wobble goal\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n//                    limbs.setServoPower(\"wobleClawLeft\", 1);\n//                    limbs.setServoPower(\"wobleClawRight\", -1);\n                } else {\n                    step++;\n                    break;\n                }\n            case 34:\n                //drive back to line and park\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1000) {\n                    driver.driveRaw(-0.6f, -0.6f, 0.6f, 0.6f);\n                } else {\n                    driver.stopDrive();\n                    step = 77;\n                    break;\n                }\n            case 40:\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1500) {\n                    driver.driveRaw( 0.6f, 0.6f, -0.6f, -0.6f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 41:\n                //If 4 rings drive to thirds section\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1500) {\n                    driver.driveRaw(0.6f,0.6f,-0.6f, -0.6f);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 42:\n                //turn 90 degrees\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1000) {\n                    imu.getPosition();\n                    float proportional = PaulMath.proportionalPID(imu.getOrientation().thirdAngle, -90);\n                    driver.driveRaw(-proportional, proportional, -proportional, proportional);\n                } else {\n                    driver.stopDrive();\n                    step++;\n                    break;\n                }\n            case 43:\n                //lower wobble goal\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n//                    limbs.setServoPower(\"wobleArmLeft\", 1);\n//                    limbs.setServoPower(\"wobleArmRight\", -1);\n                } else {\n                    step++;\n                    break;\n                }\n            case 44:\n                //release wobble goal\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 500) {\n//                    limbs.setServoPower(\"wobleClawLeft\", 1);\n//                    limbs.setServoPower(\"wobleClawRight\", -1);\n                } else {\n                    step++;\n                    break;\n                }\n            case 45:\n                //drive back to the line and park\n                startTime = getRuntime();\n                if(getRuntime()-startTime < 1500) {\n                    driver.driveRaw(-0.6f,-0.6f,0.6f, 0.6f);\n                } else {\n                    driver.stopDrive();\n                    step = 77;\n                    break;\n                }\n        }\n\n        telemetry.addData(\"Step:\", step);\n        telemetry.addData(\"IMU Orientation: \", imu.getOrientation().thirdAngle);\n        telemetry.addData(\"IMU Acceleration: \", imu.getLinearAcceleration().toString());\n        telemetry.addData(\"IMU Position: \", imu.getPosition().toString());\n        telemetry.addData(\"Time:\", getRuntime());\n        telemetry.addData(\"Drum Power\", limbs.getMotorPower(\"drum\"));\n        telemetry.addData(\"Intake Power\", limbs.getMotorPower(\"intake\"));\n        telemetry.addData(\"Flywheel Right Power\", limbs.getMotorPower(\"flywheelRight\"));\n        telemetry.addData(\"Flywheel Left Power\", limbs.getMotorPower(\"flywheelLeft\"));\n        telemetry.addData(\"FL Power: \", driver.frontLeft.getPower());\n        telemetry.addData(\"FR Power: \", driver.frontRight.getPower());\n        telemetry.addData(\"BL Power: \", driver.backLeft.getPower());\n        telemetry.addData(\"BR Power: \", driver.backRight.getPower());\n\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/SwitchAuto.java	(revision 587596af7857cadee080d14233b1a94e1e4b327f)
+++ TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous/SwitchAuto.java	(date 1614456851000)
@@ -82,7 +82,7 @@
             case 1:
                 //go forward
                 startTime = getRuntime();
-                if(getRuntime()-startTime < 1000) {
+                if((getRuntime()-startTime) < 1000) {
                     driver.driveRaw( 0.6f, 0.6f, 0.6f, 0.6f);
                 } else {
                     driver.stopDrive();
@@ -92,7 +92,7 @@
             case 2:
                 //strafe to rings
                 startTime = getRuntime();
-                if(getRuntime()-startTime < 500) {
+                if((getRuntime()-startTime < 500)) {
                     driver.driveRaw(0.4f,-0.4f,-0.4f, 0.4f);
                 } else {
                     driver.stopDrive();
