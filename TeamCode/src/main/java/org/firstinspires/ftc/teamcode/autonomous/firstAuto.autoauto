#init:
    setServoPosition(wobbleArmLeft, 0.055), setServoPosition(wobbleArmRight, 0.055), next;
    setServoPosition(wobbleGrabLeft, 1), setServoPosition(wobbleGrabRight, 1), next;
    setServoPower(shooterArm, 0.63), setMotorPower(drum, -0.5), setMotorPower(flywheelLeft, -0.3), setMotorPower(flywheelRight, 0.3), after 0.8s next;
    setMotorPower(flywheelLeft, 0), setMotorPower(flywheelRight, 0), next;
    goto shooting, driveOmni()

#shooting:
    //drive to sampling
    driveOmni(0.3,0,0), after 1550ticks next;
    driveOmni(0,0.3,0), after 70ticks next;
    //setting conditional
    let rings = 0, if(isSpecial(sensorOne)) let rings = 1, if(isSpecial(sensorFour)) let rings = 4, log(rings), after 0.5s next;

    //drive to line
    driveOmni(0.3,0,0), after 900ticks next;
    driveOmni(0,0.3,0), after 300ticks next;
    let proportional = proportionalPID(getThirdAngleOrientation(), 180, 0.001f), driveOmni(0,0,proportional), if(getThirdAngleOrientation() == 179) next, after 0.5s next;
    driveOmni();



    //shooting
    setServoPower(shooterArm, 0.4), after 0.4s next;
    setServoPower(shooterArm, 0.63), setMotorPower(drum, -0.5), setMotorPower(flywheelLeft, -0.3), setMotorPower(flywheelRight, 0.3), after 0.8s next;
    setMotorPower(flywheelLeft, 0.75), setMotorPower(flywheelRight, -0.75), after 0.5s next;

    //shooting
    setServoPower(shooterArm, 0.4), after 0.4s next;
    setServoPower(shooterArm, 0.63), setMotorPower(drum, -0.5), setMotorPower(flywheelLeft, -0.3), setMotorPower(flywheelRight, 0.3), after 0.8s next;
    setMotorPower(flywheelLeft, 0.75), setMotorPower(flywheelRight, -0.75), after 0.5s next;

    //shooting
    setServoPower(shooterArm, 0.4), after 0.4s next;
    setServoPower(shooterArm, 0.63), setMotorPower(flywheelLeft, 0), setMotorPower(flywheelRight, 0), next;

    //goto different threads
    if(rings == 0) goto zeroRings, if(rings == 1) goto oneRing, if(rings == 4) goto fourRings;

#zeroRings:
    //drive to correct position
    driveOmni(0.3,0,0), after 1300ticks next;
    driveOmni(0,-0.4,0), after 2000ticks next;

    //release wobble goal
    setServoPosition(wobbleArmLeft, 0.055), setServoPosition(wobbleArmRight, 0.055), after 2s next;
    setServoPosition(wobbleGrabLeft, 0.2), setServoPosition(wobbleGrabRight, 0.2), after 2s next;
    setServoPosition(wobbleArmLeft, 0.055), setServoPosition(wobbleArmRight, 0.055), driveOmni(0,0.4,0), after 1300ticks next;

    //park on the line
    driveOmni(-0.3,0,0), after 500ticks goto end;

#oneRing:
    //drive to correct position
    driveOmni(0.3,0,0), after 2000ticks next;

    //release wobble goals
    setServoPosition(wobbleArmLeft, 0.055), setServoPosition(wobbleArmRight, 0.055), after 2s next;
    setServoPosition(wobbleGrabLeft, 0.2), setServoPosition(wobbleGrabRight, 0.2), after 2s next;
    setServoPosition(wobbleArmLeft, 0.055), setServoPosition(wobbleArmRight, 0.055), driveOmni(0,0.4,0), after 1300ticks next;

    //park on the line
    driveOmni(-0.3,0,0), after 1500ticks goto end;

#fourRings:
    //drive to correct position
    driveOmni(0.3,0,0), after 2800ticks next;
    //turn to position
    proportional = proportionalPID(getThirdAngleOrientation(), 90, 0.004f), driveOmni(0,0,proportional), after 2s next;
    driveOmni(-0.4,0,0), after 400ticks next;

    //release wobble goal
    setServoPosition(wobbleArmLeft, 0.055), setServoPosition(wobbleArmRight, 0.055), after 2s next;
    setServoPosition(wobbleGrabLeft, 0.2), setServoPosition(wobbleGrabRight, 0.2), after 2s next;
    setServoPosition(wobbleArmLeft, 0.055), setServoPosition(wobbleArmRight, 0.055), driveOmni(0,0.4,0), after 1300ticks next;

    //park on the line
    driveOmni(-0.4,0,0), after 800ticks goto end;

#end:
    driveOmni(0,0,0), setServoPower(shooterArm, 0.63), setMotorPower(flywheelLeft, 0), setMotorPower(flywheelRight, 0), setMotoPower(drum, 0);